# Test environment values for calendar-app
# Usage: helm install calendar-app-test ./helm/calendar-app -f values-test.yaml

# Application configuration
app:
  name: calendar-app-test
  port: 3000
  healthPath: /api/health

# Image configuration for test environment
image:
  repository: ghcr.io/sayjeyhi/calendar-app
  tag: latest
  pullPolicy: Always

# Deployment configuration for test
deployment:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0%

# Resource configuration for test environment
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

# Health check configuration
healthChecks:
  livenessProbe:
    initialDelaySeconds: 15
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# Service configuration
service:
  type: ClusterIP
  port: 3000
  targetPort: 3000

# Ingress configuration for test environment
ingress:
  enabled: true
  className: traefik
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    traefik.ingress.kubernetes.io/router.priority: "1000"
    traefik.ingress.kubernetes.io/router.middlewares: "test-helm-https-redirect@kubernetescrd"
  hosts:
    - host: test-helm.iwaskidding.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: calendar-app-test-tls
      hosts:
        - test-helm.iwaskidding.com

# Middleware configuration for test
middleware:
  enabled: true
  redirectHttps:
    enabled: true
    permanent: true

# Environment variables for test
env:
  NODE_ENV: test
  LOG_LEVEL: debug

# Labels and annotations for test environment
labels:
  environment: test
  app.kubernetes.io/instance: calendar-app-test
annotations:
  deployment.kubernetes.io/revision: "1"

# Namespace
namespace: test-helm

# Service account
serviceAccount:
  create: false
  name: ""

# Security context
securityContext: {}
podSecurityContext: {}
